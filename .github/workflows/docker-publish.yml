name: Docker Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'latest'
      registry:
        description: 'Docker registry'
        required: true
        default: 'ghcr.io'
      image_name:
        description: 'Image name'
        required: true
        default: 'negaihoshi'
      push_to_registry:
        description: 'Push to registry'
        required: true
        default: 'true'
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: ${{ inputs.push_to_registry == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=${{ inputs.version }}
          
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        push: ${{ inputs.push_to_registry == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push frontend-main image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend/aii-home
        file: ./frontend/aii-home/Dockerfile
        push: ${{ inputs.push_to_registry == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}-frontend-main
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push frontend-admin image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend/admin
        file: ./frontend/admin/Dockerfile
        push: ${{ inputs.push_to_registry == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}-frontend-admin
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create multi-platform image
      if: ${{ inputs.push_to_registry == 'true' }}
      run: |
        # Create manifest for multi-platform support
        docker manifest create ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }} \
          ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}
        docker manifest push ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}
        
    - name: Output image info
      run: |
        echo "Built images:"
        echo "- Backend: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}"
        echo "- Frontend Main: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-main"
        echo "- Frontend Admin: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-admin"
        
    - name: Create release notes
      if: ${{ inputs.push_to_registry == 'true' }}
      run: |
        cat > docker-release-notes.md << EOF
        # Docker Images Published
        
        ## Images
        - **Backend**: \`${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}\`
        - **Frontend Main**: \`${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-main\`
        - **Frontend Admin**: \`${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-admin\`
        
        ## Usage
        \`\`\`yaml
        # docker-compose.yml
        version: '3.8'
        services:
          backend:
            image: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}
            ports:
              - "9292:9292"
              
          frontend-main:
            image: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-main
            ports:
              - "3000:80"
              
          frontend-admin:
            image: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image_name }}:${{ inputs.version }}-frontend-admin
            ports:
              - "3001:80"
        \`\`\`
        EOF
        
    - name: Upload release notes
      uses: actions/upload-artifact@v3
      with:
        name: docker-release-notes
        path: docker-release-notes.md


